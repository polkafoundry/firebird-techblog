# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type Admin {
  id: ID!
  name: String
  email: String
  password: PasswordState
  is_root_admin: Boolean
}

type PasswordState {
  isSet: Boolean!
}

input AdminWhereUniqueInput {
  id: ID
  email: String
}

input AdminWhereInput {
  AND: [AdminWhereInput!]
  OR: [AdminWhereInput!]
  NOT: [AdminWhereInput!]
  id: IDFilter
  name: StringFilter
  email: StringFilter
  is_root_admin: BooleanFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input BooleanFilter {
  equals: Boolean
  not: BooleanFilter
}

input AdminOrderByInput {
  id: OrderDirection
  name: OrderDirection
  email: OrderDirection
  is_root_admin: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input AdminUpdateInput {
  name: String
  email: String
  password: String
  is_root_admin: Boolean
}

input AdminUpdateArgs {
  where: AdminWhereUniqueInput!
  data: AdminUpdateInput!
}

input AdminCreateInput {
  name: String
  email: String
  password: String
  is_root_admin: Boolean
}

type Article {
  id: ID!
  is_display: Int
  status: ArticleStatusType
  thumbnail: ImageFieldOutput
  title: String
  category(
    where: CategoryWhereInput! = {}
    orderBy: [CategoryOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [Category!]
  categoryCount(where: CategoryWhereInput! = {}): Int
  author_name: String
  author_image: String
  author_email: String
  hashtags: String
  is_exclusive: Boolean
  content: String
  references: String
  is_admin: Boolean
  created_at: DateTime
  alias: String
}

enum ArticleStatusType {
  pending
  approved
  rejected
}

type ImageFieldOutput {
  id: ID!
  filesize: Int!
  width: Int!
  height: Int!
  extension: ImageExtension!
  url: String!
}

enum ImageExtension {
  jpg
  png
  webp
  gif
}

scalar DateTime
  @specifiedBy(url: "https://datatracker.ietf.org/doc/html/rfc3339#section-5.6")

input ArticleWhereUniqueInput {
  id: ID
  alias: String
}

input ArticleWhereInput {
  AND: [ArticleWhereInput!]
  OR: [ArticleWhereInput!]
  NOT: [ArticleWhereInput!]
  id: IDFilter
  is_display: IntFilter
  status: ArticleStatusTypeNullableFilter
  title: StringFilter
  category: CategoryManyRelationFilter
  author_name: StringFilter
  author_image: StringFilter
  author_email: StringFilter
  hashtags: StringFilter
  is_exclusive: BooleanFilter
  is_admin: BooleanFilter
  created_at: DateTimeNullableFilter
  alias: StringFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: IntFilter
}

input ArticleStatusTypeNullableFilter {
  equals: ArticleStatusType
  in: [ArticleStatusType!]
  notIn: [ArticleStatusType!]
  not: ArticleStatusTypeNullableFilter
}

input CategoryManyRelationFilter {
  every: CategoryWhereInput
  some: CategoryWhereInput
  none: CategoryWhereInput
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: DateTimeNullableFilter
}

input ArticleOrderByInput {
  id: OrderDirection
  is_display: OrderDirection
  status: OrderDirection
  title: OrderDirection
  author_name: OrderDirection
  author_image: OrderDirection
  author_email: OrderDirection
  hashtags: OrderDirection
  is_exclusive: OrderDirection
  is_admin: OrderDirection
  created_at: OrderDirection
  alias: OrderDirection
}

input ArticleUpdateInput {
  is_display: Int
  status: ArticleStatusType
  thumbnail: ImageFieldInput
  title: String
  category: CategoryRelateToManyForUpdateInput
  author_name: String
  author_image: String
  author_email: String
  hashtags: String
  is_exclusive: Boolean
  content: String
  references: String
  is_admin: Boolean
  created_at: DateTime
  alias: String
}

input ImageFieldInput {
  upload: Upload!
}

"""
The `Upload` scalar type represents a file upload.
"""
scalar Upload

input CategoryRelateToManyForUpdateInput {
  disconnect: [CategoryWhereUniqueInput!]
  set: [CategoryWhereUniqueInput!]
  create: [CategoryCreateInput!]
  connect: [CategoryWhereUniqueInput!]
}

input ArticleUpdateArgs {
  where: ArticleWhereUniqueInput!
  data: ArticleUpdateInput!
}

input ArticleCreateInput {
  is_display: Int
  status: ArticleStatusType
  thumbnail: ImageFieldInput
  title: String
  category: CategoryRelateToManyForCreateInput
  author_name: String
  author_image: String
  author_email: String
  hashtags: String
  is_exclusive: Boolean
  content: String
  references: String
  is_admin: Boolean
  created_at: DateTime
  alias: String
}

input CategoryRelateToManyForCreateInput {
  create: [CategoryCreateInput!]
  connect: [CategoryWhereUniqueInput!]
}

type Category {
  id: ID!
  name: String
}

input CategoryWhereUniqueInput {
  id: ID
}

input CategoryWhereInput {
  AND: [CategoryWhereInput!]
  OR: [CategoryWhereInput!]
  NOT: [CategoryWhereInput!]
  id: IDFilter
  name: StringFilter
}

input CategoryOrderByInput {
  id: OrderDirection
  name: OrderDirection
}

input CategoryUpdateInput {
  name: String
}

input CategoryUpdateArgs {
  where: CategoryWhereUniqueInput!
  data: CategoryUpdateInput!
}

input CategoryCreateInput {
  name: String
}

type AMABanner {
  id: ID!
  banner: String
}

input AMABannerWhereUniqueInput {
  id: ID
}

input AMABannerWhereInput {
  AND: [AMABannerWhereInput!]
  OR: [AMABannerWhereInput!]
  NOT: [AMABannerWhereInput!]
  id: IDFilter
  banner: StringFilter
}

input AMABannerOrderByInput {
  id: OrderDirection
  banner: OrderDirection
}

input AMABannerUpdateInput {
  banner: String
}

input AMABannerUpdateArgs {
  where: AMABannerWhereUniqueInput!
  data: AMABannerUpdateInput!
}

input AMABannerCreateInput {
  banner: String
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON
  @specifiedBy(
    url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf"
  )

type Mutation {
  createAdmin(data: AdminCreateInput!): Admin
  createAdmins(data: [AdminCreateInput!]!): [Admin]
  updateAdmin(where: AdminWhereUniqueInput!, data: AdminUpdateInput!): Admin
  updateAdmins(data: [AdminUpdateArgs!]!): [Admin]
  deleteAdmin(where: AdminWhereUniqueInput!): Admin
  deleteAdmins(where: [AdminWhereUniqueInput!]!): [Admin]
  createArticle(data: ArticleCreateInput!): Article
  createArticles(data: [ArticleCreateInput!]!): [Article]
  updateArticle(
    where: ArticleWhereUniqueInput!
    data: ArticleUpdateInput!
  ): Article
  updateArticles(data: [ArticleUpdateArgs!]!): [Article]
  deleteArticle(where: ArticleWhereUniqueInput!): Article
  deleteArticles(where: [ArticleWhereUniqueInput!]!): [Article]
  createCategory(data: CategoryCreateInput!): Category
  createCategories(data: [CategoryCreateInput!]!): [Category]
  updateCategory(
    where: CategoryWhereUniqueInput!
    data: CategoryUpdateInput!
  ): Category
  updateCategories(data: [CategoryUpdateArgs!]!): [Category]
  deleteCategory(where: CategoryWhereUniqueInput!): Category
  deleteCategories(where: [CategoryWhereUniqueInput!]!): [Category]
  createAMABanner(data: AMABannerCreateInput!): AMABanner
  createAMABanners(data: [AMABannerCreateInput!]!): [AMABanner]
  updateAMABanner(
    where: AMABannerWhereUniqueInput!
    data: AMABannerUpdateInput!
  ): AMABanner
  updateAMABanners(data: [AMABannerUpdateArgs!]!): [AMABanner]
  deleteAMABanner(where: AMABannerWhereUniqueInput!): AMABanner
  deleteAMABanners(where: [AMABannerWhereUniqueInput!]!): [AMABanner]
  endSession: Boolean!
  authenticateAdminWithPassword(
    email: String!
    password: String!
  ): AdminAuthenticationWithPasswordResult
  createInitialAdmin(
    data: CreateInitialAdminInput!
  ): AdminAuthenticationWithPasswordSuccess!
}

union AdminAuthenticationWithPasswordResult =
    AdminAuthenticationWithPasswordSuccess
  | AdminAuthenticationWithPasswordFailure

type AdminAuthenticationWithPasswordSuccess {
  sessionToken: String!
  item: Admin!
}

type AdminAuthenticationWithPasswordFailure {
  message: String!
}

input CreateInitialAdminInput {
  name: String
  email: String
  password: String
  is_root_admin: Boolean
}

type Query {
  admins(
    where: AdminWhereInput! = {}
    orderBy: [AdminOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [Admin!]
  admin(where: AdminWhereUniqueInput!): Admin
  adminsCount(where: AdminWhereInput! = {}): Int
  articles(
    where: ArticleWhereInput! = {}
    orderBy: [ArticleOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [Article!]
  article(where: ArticleWhereUniqueInput!): Article
  articlesCount(where: ArticleWhereInput! = {}): Int
  categories(
    where: CategoryWhereInput! = {}
    orderBy: [CategoryOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [Category!]
  category(where: CategoryWhereUniqueInput!): Category
  categoriesCount(where: CategoryWhereInput! = {}): Int
  aMABanners(
    where: AMABannerWhereInput! = {}
    orderBy: [AMABannerOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [AMABanner!]
  aMABanner(where: AMABannerWhereUniqueInput!): AMABanner
  aMABannersCount(where: AMABannerWhereInput! = {}): Int
  keystone: KeystoneMeta!
  authenticatedItem: AuthenticatedItem
}

union AuthenticatedItem = Admin

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  enableSignout: Boolean!
  enableSessionItem: Boolean!
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  itemQueryName: String!
  listQueryName: String!
  hideCreate: Boolean!
  hideDelete: Boolean!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  initialColumns: [String!]!
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  initialSort: KeystoneAdminUISort
  isHidden: Boolean!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  description: String
  isOrderable: Boolean!
  isFilterable: Boolean!
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

enum QueryMode {
  default
  insensitive
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
